# @see https://github.com/KoharaKazuya/dev-blueprint/blob/b3f61741c761351233f0e2d16112d4c093891586/aws/cfn-static-site-template/cfn.template.yml

# このテンプレートファイルのフォーマットのバージョン
#
# ファイル更新日などではなく、フォーマットのバージョン番号のため変更してはならない
AWSTemplateFormatVersion: "2010-09-09"

# スタックの説明文
#
# CloudFormation スタックの一覧ページに表示されるため、なるべく伝わりやすい
# 説明を記述したほうが良い
Description: Stack for www.koharakazuya.net

# パラメーター
#
# このテンプレートを使ってスタックを作成する際に入力させたい可変の値を記述する
Parameters:
  # 既存の Route53 のホストゾーン名
  #
  # Web サイトのドメイン名は DomainName (別パラメーター) により指定するが、
  # DomainName はこのパラメーターで指定するホストゾーンに含められる形でなければならない
  HostedZone:
    Type: String
    Description: Route53 Hosted Zone Name
    AllowedPattern: (?!-)[a-zA-Z0-9-.]{1,63}(?<!-)
    ConstraintDescription: must be a valid DNS zone name.

  # Web サイトのドメイン名
  #
  # HostedZone 以下に DNS レコードを登録するため、ホストゾーンに含められる形でなければならない
  DomainName:
    Type: String
    Description: Domain Name
    AllowedPattern: (?!-)[a-zA-Z0-9-.]{1,63}(?<!-)
    ConstraintDescription: must be a valid DNS zone name.

  # 証明書 (ACM)
  #
  # DomainName で指定した値を含む証明書でなければならない
  #
  # CloudFront で使用するため、バージニア北部に登録された ACM でなければならない
  CertificateArn:
    Type: String
    Description: Certificate ARN (us-east-1 only)
    AllowedPattern: ^arn:aws:acm:us-east-1:[0-9]*:certificate/[0-9a-z-]*$

  # アプリケーションは SPA (Single Page Application) か
  SPA:
    Type: String
    Description: Which is Application a Single Page Application
    AllowedValues:
      - "True"
      - "False"
    Default: "False"

# リソースの設定値を可変にするための条件式
Conditions:
  SPA: !Equals [!Ref SPA, "True"]

# スタック作成時に生成するリソース
Resources:
  # CloudFront のオリジンアクセスアイデンティティ
  #
  # CloudFront が S3 バケットに認証してもらうために必要となる
  CloudFrontOriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Sub ${AWS::StackName}

  # S3 バケット (アプリケーションデータ)
  #
  # アプリケーションファイルの置き場所となる
  S3BucketStaticSite:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref DomainName
      AccessControl: Private

  # S3 バケットポリシー (アプリケーションデータ)
  #
  # S3 バケットがどこからアクセス可能かを設定する
  S3BucketStaticSitePolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref S3BucketStaticSite
      PolicyDocument:
        Statement:
          # CloudFront からの読み込みを許可する
          - Effect: Allow
            Principal:
              CanonicalUser: !GetAtt CloudFrontOriginAccessIdentity.S3CanonicalUserId
            Action:
              - s3:ListBucket
              - s3:GetObject
            Resource:
              - !Sub ${S3BucketStaticSite.Arn}
              - !Sub ${S3BucketStaticSite.Arn}/*

  # CloudFront
  #
  # オリジンサーバーやキャッシュ時間などの CDN 設定
  CloudFront:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        # S3 バケット (アプリケーションデータ) をオリジンサーバーとする
        Origins:
          - DomainName: !GetAtt S3BucketStaticSite.RegionalDomainName
            Id: S3BucketStaticSite
            S3OriginConfig:
              OriginAccessIdentity: !Sub origin-access-identity/cloudfront/${CloudFrontOriginAccessIdentity}
        Enabled: true
        Comment: !Sub ${AWS::StackName}
        DefaultRootObject: index.html
        # SPA の場合、パスが存在しない全てのリクエストを /index.html で返す
        # SPA でない場合、パスが存在しない全てのリクエストを /404.html で返す
        #
        # また、エラーレスポンスのキャッシュ時間はデフォルトを 300 秒から
        # 短くするため、全てのエラーレスポンスの TTL を変更する
        # @see https://docs.aws.amazon.com/AmazonS3/latest/API/ErrorResponses.html
        # @see https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/custom-error-pages.html
        CustomErrorResponses:
          - ErrorCode: 400
            ErrorCachingMinTTL: 30
          - ErrorCode: 403
            ErrorCachingMinTTL: 30
          - !If
            - SPA
            - ErrorCode: 404
              ErrorCachingMinTTL: 30
              ResponseCode: 200
              ResponsePagePath: /index.html
            - ErrorCode: 404
              ErrorCachingMinTTL: 30
              ResponseCode: 404
              ResponsePagePath: /404.html
          - ErrorCode: 405
            ErrorCachingMinTTL: 30
          - ErrorCode: 416
            ErrorCachingMinTTL: 30
          - ErrorCode: 500
            ErrorCachingMinTTL: 30
          - ErrorCode: 501
            ErrorCachingMinTTL: 30
          - ErrorCode: 503
            ErrorCachingMinTTL: 30
        Aliases:
          - !Ref DomainName
        DefaultCacheBehavior:
          TargetOriginId: S3BucketStaticSite
          CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6 # Managed-CachingOptimized
          OriginRequestPolicyId: 88a5eaf4-2fd4-4709-b370-b4c650ea3fcf # Managed-CORS-S3Origin
          ViewerProtocolPolicy: redirect-to-https
          Compress: true
        ViewerCertificate:
          AcmCertificateArn: !Ref CertificateArn
          SslSupportMethod: sni-only
        IPV6Enabled: true
        HttpVersion: http2

  # Route53 レコード
  #
  # DNS レコードの登録
  # IPv6 の AAAA レコードのために RecordSetGroup を用いる
  DNSRecord:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneName: !Sub ${HostedZone}.
      RecordSets:
        - Name: !Sub ${DomainName}.
          Type: A
          AliasTarget:
            DNSName: !GetAtt CloudFront.DomainName
            HostedZoneId: Z2FDTNDATAQYW2 # CloudFront 固定値
        - Name: !Sub ${DomainName}.
          Type: AAAA
          AliasTarget:
            DNSName: !GetAtt CloudFront.DomainName
            HostedZoneId: Z2FDTNDATAQYW2 # CloudFront 固定値

# 出力値
#
# このテンプレートを使ってスタックを作成した際に生成したリソースから取得できる値
# コンソールで表示できる他、別のスタックの入力として参照できる
Outputs:
  URL:
    Description: Application URL
    Value: !Sub https://${DomainName}/
